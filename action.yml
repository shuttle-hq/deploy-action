name: Shuttle Deploy
description: Deploy to Shuttle

inputs:
  deploy-key:
    description: 'The key found at "https://www.shuttle.rs/login"'
    required: true
  cargo-shuttle-version:
    description: "Version of cargo-shuttle"
    required: false
    default: ""
  working-directory:
    description: "The directory which includes the `Cargo.toml`"
    required: false
    default: "."
  name:
    description: "Name of the project (overrides crate name & Shuttle.toml)"
    required: false
    default: ""
  idle-minutes:
    description: "Idle timeout for the deployment"
    required: false
    default: ""
  allow-dirty:
    description: "Allow uncommitted changes to be deployed"
    required: false
    default: "false"
  no-test:
    description: "Don't run tests before deployment"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
      # check out repo if not done already
    - id: check-repo-is-not-initialized
      run: echo "remote-url=$( git config --get remote.origin.url )" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/checkout@v3
      if: ${{ !contains(steps.check-repo-is-not-initialized.outputs.remote-url, github.repository) }}

      # install with cargo-binstall
    - name: Install cargo-binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
      shell: bash
    - name: Install cargo-shuttle
      if: ${{ inputs.cargo-shuttle-version == '' }}
      run: cargo binstall -y --locked cargo-shuttle
      shell: bash
    - name: Install cargo-shuttle ${{ inputs.cargo-shuttle-version }}
      if: ${{ inputs.cargo-shuttle-version != '' }}
      run: cargo binstall -y --locked cargo-shuttle@${{ inputs.cargo-shuttle-version }}
      shell: bash

    - name: Deploy to Shuttle
      run: |
        cargo shuttle deploy \
        $(if [ "${{ inputs.name }}" != "" ]; then echo "--name ${{ inputs.name }}"; fi) \
        $(if [ "${{ inputs.allow-dirty }}" != "false" ]; then echo --allow-dirty; fi) \
        $(if [ "${{ inputs.no-test }}" != "false" ]; then echo --no-test; fi) \
        $(if [ "${{ inputs.idle-minutes }}" != "" ]; then echo --idle-minutes $ {{ inputs.idle-minutes }}; fi) \
        | awk '!/Database URI.*?$/'
      working-directory: ${{ inputs.working-directory }}
      env:
        SHUTTLE_API_KEY: ${{ inputs.deploy-key }}
      shell: bash
